version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    environment:
      HOST: '0.0.0.0'
    ports:
      - '3000:3000'
    volumes:
      - ./web/:/app:cached
      - node_modules-store:/app/node_modules
    stdin_open: true
    tty: true

  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - '8080:80'
    depends_on:
      - app
    volumes:
      - ./src/:/app:cached

  app:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    volumes:
      - ./src/:/app:cached
      - vendor-store:/app/vendor

  db:
    build:
      context: .
      dockerfile: ./docker/db/Dockerfile
    ports:
      - '3306:3306'
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: 'Asia/Tokyo'
    volumes:
      - mysql-volume:/var/lib/mysql:cached

  db_test:
    build:
      context: .
      dockerfile: ./docker/db/Dockerfile
    ports:
      - '3307:3306'
    environment:
      MYSQL_DATABASE: ${TEST_MYSQL_DATABASE}
      MYSQL_USER: ${TEST_MYSQL_USER}
      MYSQL_PASSWORD: ${TEST_MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${TEST_MYSQL_ROOT_PASSWORD}
      TZ: 'Asia/Tokyo'
    volumes:
      - mysql-test-volume:/var/lib/mysql:cached

  mailhog:
    image: mailhog/mailhog
    ports:
      - 8025:8025

volumes:
  mysql-volume:
  mysql-test-volume:
  vendor-store:
  node_modules-store: